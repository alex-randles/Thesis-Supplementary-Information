@prefix xml: <http://www.w3.org/XML/1998/namespace> . 
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> . 
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> . 
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> . 
@prefix rr: <http://www.w3.org/ns/r2rml#> . 
@prefix foodreport: <http://www.foodreport.be/ontology#> . 

	
<#Ingredient>	
 rdf:type  rr:TriplesMap ;	
	
 rr:logicalTable [ 	
 	 rr:sqlQuery  "SELECT * FROM Ingredient LEFT JOIN ManufacturedFrom ON (Ingredient.ingredientName = ManufacturedFrom.ingredient)" ;	
 ];	
	
 rr:subjectMap [ 	
 	 rr:class  foodreport:Ingredient ;	
	 rr:template  "http://www.foodreport.be/data#{ingredientName}" ;	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:ingredientName ;	
	 rr:objectMap  [	
		 rr:column  "ingredientName" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:calcium ;	
	 rr:objectMap  [	
		 rr:column  "calcium" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:calories ;	
	 rr:objectMap  [	
		 rr:column  "calories" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:carbohydrates ;	
	 rr:objectMap  [	
		 rr:column  "carbohydrates" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:fat ;	
	 rr:objectMap  [	
		 rr:column  "fat" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:proteins ;	
	 rr:objectMap  [	
		 rr:column  "proteins" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:sodium ;	
	 rr:objectMap  [	
		 rr:column  "sodium" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:sugar ;	
	 rr:objectMap  [	
		 rr:column  "sugar" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:hasFoodType ;	
	 rr:objectMap  [	
		 rr:parentTriplesMap  <#FoodType> ;	
		 rr:joinCondition  [	
			 rr:child  "foodType" ;	
			 rr:parent  "foodTypeName" ;	
			 ];	
 		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:manufactoredFrom ;	
	 rr:objectMap  [	
		 rr:parentTriplesMap  <#Country> ;	
		 rr:joinCondition  [	
			 rr:child  "country" ;	
			 rr:parent  "countryName" ;	
			 ];	
 		]; 	
 ];	
.	
	
<#Country>	
 rdf:type  rr:TriplesMap ;	
	
 rr:logicalTable [ 	
 	 rr:sqlQuery  "SELECT * FROM Country LEFT JOIN Imposes ON (Country.countryName = Imposes.country)" ;	
 ];	
	
 rr:subjectMap [ 	
 	 rr:template  "http://www.foodreport.be/data#{countryName}" ;	
	 rr:class  foodreport:Country ;	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:countryName ;	
	 rr:objectMap  [	
		 rr:column  "countryName" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:isPartOf ;	
	 rr:objectMap  [	
		 rr:parentTriplesMap  <#Continent> ;	
		 rr:joinCondition  [	
			 rr:child  "continent" ;	
			 rr:parent  "continentName" ;	
			 ];	
 		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:imposes ;	
	 rr:objectMap  [	
		 rr:parentTriplesMap  <#Law> ;	
		 rr:joinCondition  [	
			 rr:parent  "lawName" ;	
			 rr:child  "law" ;	
			 ];	
 		]; 	
 ];	
.	
	
<#Continent>	
 rdf:type  rr:TriplesMap ;	
	
 rr:logicalTable [ 	
 	 rr:tableName  "Continent" ;	
 ];	
	
 rr:subjectMap [ 	
 	 rr:class  foodreport:Continent ;	
	 rr:template  "http://www.foodreport.be/data#{continentName}" ;	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:continentName ;	
	 rr:objectMap  [	
		 rr:column  "continentName" ;	
		]; 	
 ];	
.	
	
<#Law>	
 rdf:type  rr:TriplesMap ;	
	
 rr:logicalTable [ 	
 	 rr:sqlQuery  "SELECT * FROM Law LEFT JOIN AppliesToFoodType ON (Law.lawName = AppliesToFoodType.law) LEFT JOIN AppliesToIngredient ON (Law.lawName = AppliesToIngredient.law)" ;	
 ];	
	
 rr:subjectMap [ 	
 	 rr:class  foodreport:Law ;	
	 rr:template  "http://www.foodreport.be/data#{lawName}" ;	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:lawName ;	
	 rr:objectMap  [	
		 rr:column  "lawName" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:text ;	
	 rr:objectMap  [	
		 rr:column  "lawText" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:labourScore ;	
	 rr:objectMap  [	
		 rr:column  "labourScore" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:environmentScore ;	
	 rr:objectMap  [	
		 rr:column  "environmentScore" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:appliesToFoodType ;	
	 rr:objectMap  [	
		 rr:parentTriplesMap  <#FoodType> ;	
		 rr:joinCondition  [	
			 rr:child  "foodType" ;	
			 rr:parent  "foodTypeName" ;	
			 ];	
 		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  <http://www.foodreport.be/ontology/appliesToIngredient> ;;	
	 rr:objectMap  [	
		 rr:parentTriplesMap  <#Ingredient> ;	
		 rr:joinCondition  [	
			 rr:parent  "ingredientName" ;	
			 rr:child  "ingredient" ;	
			 ];	
 		]; 	
 ];	
.	
	
<#Trajectory>	
 rdf:type  rr:TriplesMap ;	
	
 rr:logicalTable [ 	
 	 rr:tableName  "Trajectory" ;	
 ];	
	
 rr:subjectMap [ 	
 	 rr:template  "http://www.foodreport.be/data#{trajectoryName}-{countryFrom}-{countryTo}" ;	
	 rr:class  foodreport:Trajectory ;	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:trajectoryName ;	
	 rr:objectMap  [	
		 rr:column  "trajectoryName" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:distance ;	
	 rr:objectMap  [	
		 rr:column  "distance" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:trajectoryScore ;	
	 rr:objectMap  [	
		 rr:column  "trajectoryScore" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:trajectoryFrom ;	
	 rr:objectMap  [	
		 rr:parentTriplesMap  <#Country> ;	
		 rr:joinCondition  [	
			 rr:parent  "countryName" ;	
			 rr:child  "countryFrom" ;	
			 ];	
 		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:trajectoryTo ;	
	 rr:objectMap  [	
		 rr:template  "http://www.foodreport.be/data#{countryTo}" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:ships ;	
	 rr:objectMap  [	
		 rr:parentTriplesMap  <#Ingredient> ;	
		 rr:joinCondition  [	
			 rr:parent  "ingredientName" ;	
			 rr:child  "ingredient" ;	
			 ];	
 		]; 	
 ];	
.	
	
<#Recipe>	
 rdf:type  rr:TriplesMap ;	
	
 rr:logicalTable [ 	
 	 rr:sqlQuery  "SELECT Recipe.recipeName, NeedsIngredient.ingredient FROM Recipe JOIN NeedsIngredient ON (NeedsIngredient.recipe = Recipe.recipeName)" ;	
 ];	
	
 rr:subjectMap [ 	
 	 rr:template  "http://www.foodreport.be/data#{recipeName}" ;	
	 rr:class  foodreport:Recipe ;	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:recipeName ;	
	 rr:objectMap  [	
		 rr:column  "recipeName" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:needsIngredient ;	
	 rr:objectMap  [	
		 rr:parentTriplesMap  <#Ingredient> ;	
		 rr:joinCondition  [	
			 rr:child  "ingredient" ;	
			 rr:parent  "ingredientName" ;	
			 ];	
 		]; 	
 ];	
.	
	
<#Step>	
 rdf:type  rr:TriplesMap ;	
	
 rr:logicalTable [ 	
 	 rr:tableName  "Step" ;	
 ];	
	
 rr:subjectMap [ 	
 	 rr:class  foodreport:Step ;	
	 rr:template  "http://www.foodreport.be/data#{describesRecipe}-{orderNumber}" ;	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:orderNumber ;	
	 rr:objectMap  [	
		 rr:column  "orderNumber" ;	
		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:describesRecipe ;	
	 rr:objectMap  [	
		 rr:parentTriplesMap  <#Recipe> ;	
		 rr:joinCondition  [	
			 rr:parent  "recipeName" ;	
			 rr:child  "describesRecipe" ;	
			 ];	
 		]; 	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:description ;	
	 rr:objectMap  [	
		 rr:column  "description" ;	
		]; 	
 ];	
.	
	
<#FoodType>	
 rdf:type  rr:TriplesMap ;	
	
 rr:logicalTable [ 	
 	 rr:tableName  "FoodType" ;	
 ];	
	
 rr:subjectMap [ 	
 	 rr:class  foodreport:FoodType ;	
	 rr:template  "http://www.foodreport.be/data#{foodTypeName}" ;	
 ];	
	
 rr:predicateObjectMap [ 	
 	 rr:predicate  foodreport:foodTypeName ;	
	 rr:objectMap  [	
		 rr:column  "foodTypeName" ;	
		]; 	
 ];	
.	
